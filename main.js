!function(){"use strict";const e=(e,n,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?t(n,o):r(n,o)},t=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},r=(e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass)};(t=>{document.querySelectorAll(t.formSelector).forEach((r=>{((t,r)=>{const n=Array.from(t.querySelectorAll(r.inputSelector)),o=t.querySelector(r.submitButtonSelector);e(n,o,r),n.forEach((a=>{a.addEventListener("input",(function(){var s,l,i;s=t,i=r,(l=a).validity.valid?((e,t,r)=>{const n=t.id+"-error",o=e.querySelector("#"+n);o.textContent="",o.classList.remove(r.errorClass),t.classList.remove(r.inputErrorClass)})(s,l,i):((e,t,r,n)=>{const o=t.id+"-error",a=e.querySelector("#"+o);a.textContent=r,a.classList.add(n.errorClass),t.classList.add(n.inputErrorClass)})(s,l,l.validationMessage,i),e(n,o,r)}))})),t.addEventListener("submit",(e=>{e.preventDefault()}))})(r,t)}))})({formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"});const n=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch("${this._baseUrl}/users/me",{headers:this._headers}).then((e=>{if(!e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getAppInfo(){return Promise.all([this.getUserInfo().then((e=>(this._userId=e._id,e))),this.getInitialCards()])}getInitialCards(){return fetch("${this._baseUrl}/cards",{headers:this._headers}).then((e=>{if(!e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"273bfa6a-d4bd-41dc-8c86-3b8ffeccf837","Content-Type":"application/json"}});n.getAppInfo().then((e=>{let[t]=e;t.forEach((e=>{const t=C([e]);S.prepend(t)})),s.textContent=userData.name,l.textContent=userData.about,avatarImage.src=userData.avatar}));const o=document.querySelector(".profile__edit-btn"),a=document.querySelector(".profile__add-btn"),s=document.querySelector(".profile__name"),l=document.querySelector(".profile__description"),i=document.querySelector("#edit-modal"),c=i.querySelector(".modal__form"),d=i.querySelector(".modal__close-btn"),u=i.querySelector("#profile-name-input"),m=i.querySelector("#profile-description-input"),_=document.querySelector("#add-card-modal"),p=_.querySelector(".modal__form"),f=p.querySelector(".modal__submit-btn"),v=_.querySelector(".modal__close-btn"),y=document.querySelector("#card-template"),S=document.querySelector(".cards__list"),b=_.querySelector("#add-card-name-input"),h=_.querySelector("#add-card-link-input"),q=document.querySelector("#preview"),E=q.querySelector(".modal__image"),L=q.querySelector(".modal__caption");function C(e){const t=y.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,n.src=e.link,n.alt=e.name,n.addEventListener("click",(()=>{I(q),L.textContent=e.name,E.src=e.link,E.alt=e.name})),o.addEventListener("click",(()=>{o.classList.toggle("card__like-btn_liked")})),a.addEventListener("click",(()=>{t.remove()})),t}function k(e){"Escape"===e.key&&x(document.querySelector(".modal_opened"))}function g(e){e.target.classList.contains("modal_opened")&&x(e.target)}function I(e){e.classList.add("modal_opened"),document.addEventListener("keydown",k)}function x(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",k)}v.addEventListener("click",(()=>{x(_)})),q.querySelector(".modal__close-btn").addEventListener("click",(()=>{x(q)})),document.querySelectorAll(".modal").forEach((e=>e.addEventListener("mousedown",g))),o.addEventListener("click",(()=>{u.value=s.textContent,m.value=l.textContent,resetValidation(c,settings),I(i)})),d.addEventListener("click",(()=>{x(i)})),a.addEventListener("click",(()=>{I(_)})),c.addEventListener("submit",(function(e){e.preventDefault(),n.editUserInfo({name:name.Input.vaule,about:description.Input.vaule}).then((e=>{profileNameElement.textContent=e.name,profileDescriptionElement.textContent=e.about,x(i)})).catch((e=>{console.error(e)}))})),p.addEventListener("submit",(function(e){e.preventDefault();const t=C({name:b.value,link:h.value});S.prepend(t),p.reset(),disableButton(f,settings),x(_)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,